What happens when you initialise a repository? Why do you need to do it?

	It creates a repo on an initial commit (no commits made yet) and notes any untracked files currently in that directory. To start tracking files/commits.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	It has some changes from what's in the working directory, but it hasn't been saved into the respository. It provides an intermediate step for work to be done on a file before it is changed.	

How can you use the staging area to make sure you have one commit per logical change?

	Compare working area to staging area (with git diff), then staging area to most recent commit (with git diff --staged)

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	When you want to try something out without yet committing it to the main code (e.g. an experimental feature). The branches help keep those things separate.

How do the diagrams help you visualize the branch structure?

	By showing which commits are reachable and which diverge in some way.		

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	All the changes made in both branches get fused in a single branch. The diagram is to show where the changes came from.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

	Automatic merging saves a lot of time confirming obvious things. On the other hand, it might accidentally commit things that should have been removed.		